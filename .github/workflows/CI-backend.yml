name: CI-Backend

on:
  push:
    branches:
      - main
      - 'release/*'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        dotnet-version: [6.0.x]
        os: [ubuntu-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Set Directory
      run: cd iera-backend/Gateway

    - name: Restore dependencies
      run: | 
        cd iera-backend/Gateway
        dotnet restore

    - name: Build solution
      run: |
        cd iera-backend/Gateway
        dotnet build --no-restore --configuration Release

    - name: Run tests
      run: |
        cd iera-backend/Gateway
        dotnet test --no-build --verbosity normal --configuration Release

    - name: Publish services
      run: |
        cd iera-backend/Gateway
        dotnet publish -c Release

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: published-services
        path: iera-backend/Gateway/publish/**/*

    - name: Set up Docker Compose
      run: docker-compose -v
  
    - name: Build the Docker images with docker compose
      run: docker-compose up -d

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN_RW }}
  
    - name: Tag and Push gateway
      run: |
        docker tag gateway:latest niceonion/ierasite:gateway-latest
        docker push niceonion/ierasite:gateway-latest
  
    - name: Tag and Push announcement
      run: |    
        docker tag announcements:latest niceonion/ierasite:announcements-latest
        docker push niceonion/ierasite:announcements-latest
      
    - name: Tag and Push users
      run: |    
        docker tag users:latest niceonion/ierasite:users-latest
        docker push niceonion/ierasite:users-latest

  deploy:
    runs-on: ubuntu-latest
    needs: build    

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Start minikube
        uses: medyagh/setup-minikube@master
        
      - name: Deploy to Kubernetes
        run: |
            kubectl apply -f Kubernetes/Deployments/announcements-deployment.yaml
            kubectl apply -f Kubernetes/Deployments/users-deployment.yaml
            kubectl apply -f Kubernetes/Services/Announcements.yaml
            kubectl apply -f Kubernetes/Services/users.yaml
            kubectl apply -f Kubernetes/Ingress.yaml
            kubectl apply -f Kubernetes/HPA/hpa-announcements.yaml
            kubectl apply -f Kubernetes/HPA/hpa-users.yaml