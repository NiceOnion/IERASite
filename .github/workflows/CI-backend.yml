name: CI-Backend

on:
  push:
    branches:
      - main
      - 'release/*'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        dotnet-version: [6.0.x, 8.0.x]
        os: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore dependencies
        run: dotnet restore iera-backend/Gateway

      - name: Build solution
        run: dotnet build iera-backend/Gateway --no-restore --configuration Release

      - name: Run tests
        run: dotnet test iera-backend/Gateway --no-build --verbosity normal --configuration Release
        env:
          TMPDIR: ${{ runner.temp }}

      - name: Publish services
        run: dotnet publish iera-backend/Gateway -c Release

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: published-services
          path: iera-backend/Gateway/bin/Release/net${{ matrix.dotnet-version }}/publish

      - name: Set up Docker Compose
        run: docker-compose -v

      - name: Build Docker images
        run: docker-compose up -d --build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN_RW }}

      - name: Tag and Push gateway
        run: |
          docker tag gateway:latest niceonion/ierasite:gateway-latest
          docker push niceonion/ierasite:gateway-latest

      - name: Tag and Push announcement
        run: |    
          docker tag announcements:latest niceonion/ierasite:announcements-latest
          docker push niceonion/ierasite:announcements-latest

      - name: Tag and Push users
        run: |    
          docker tag users:latest niceonion/ierasite:users-latest
          docker push niceonion/ierasite:users-latest

      - name: Tag and Push comments
        run: |    
          docker tag comments:latest niceonion/ierasite:comments-latest
          docker push niceonion/ierasite:comments-latest

  
  performcance:
      runs-on: ubuntu-latest
      needs: build

      steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start minikube
        uses: medyagh/setup-minikube@master

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f Kubernetes/Deployments/announcements-deployment.yaml
          kubectl apply -f Kubernetes/Deployments/users-deployment.yaml
          kubectl apply -f Kubernetes/Deployments/ocelot-deployment.yaml
          kubectl apply -f Kubernetes/Services/Announcements.yaml
          kubectl apply -f Kubernetes/Services/users.yaml
          kubectl apply -f Kubernetes/Services/gateway.yaml
          kubectl apply -f Kubernetes/Ingress.yaml
          kubectl apply -f Kubernetes/HPA/hpa-announcements.yaml
          kubectl apply -f Kubernetes/HPA/hpa-users.yaml

      - name: Start Minikube Tunnel (background)
        run: |
          nohup minikube tunnel > /dev/null 2>&1 &
          sleep 10  # Give the tunnel some time to establish

        
      - name: Run local k6 test
        uses: grafana/k6-action@v0.2.0
        with:
          filename: k6LoadTest.js

  static-analysis:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN_RW: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
